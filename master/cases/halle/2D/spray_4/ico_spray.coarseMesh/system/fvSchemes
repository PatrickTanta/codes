/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default Euler;
}

gradSchemes
{
    default         Gauss linear;
    grad(p)         Gauss linear;
}

divSchemes
{
    default          none;
    div(phi,rho)     Gauss limitedLinear 1;
    div(phi,addedMass) Gauss limitedLinear 1;
    div(phi,U)       Gauss limitedLinearV 1;
    div(phiU,p)      Gauss linear;
    div(phiU,pd)      Gauss linear;
    div(phi,k)       Gauss limitedLinear 1;
    div(phi,epsilon) Gauss limitedLinear 1;
    div(phi,Yi)    Gauss  upwind;
    div(phi,T)     Gauss  upwind;
    div((nuEff*dev2(grad(U).T()))) Gauss linear;
    div((nuEff*dev(grad(U).T())))   Gauss linear;
}

laplacianSchemes
{
    default                 Gauss linear corrected;
    laplacian(nuEff,U)      Gauss linear corrected;
    laplacian(nuEff,ft)     Gauss linear corrected;
    laplacian(nuEff,fu)     Gauss linear corrected;
    laplacian(((alphah*nut)+alpha),h) Gauss linear corrected;
    laplacian((rho|A(U)),p) Gauss linear corrected;
    laplacian(rhoD,k)       Gauss linear corrected;
    laplacian(rhoD,epsilon) Gauss linear corrected;
//    laplacian(kappaEff, T)  Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
    interpolate(HbyA) linear;
    pd				linear;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    p;
	T;
}

// ************************************************************************* //
